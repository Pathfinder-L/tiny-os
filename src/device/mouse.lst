     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_io_out8
     7 00000000                                 	EXTERN	_io_in8
     8 00000000                                 	EXTERN	_wait_KBC_sendready
     9 00000000                                 [FILE "mouse.c"]
    10                                          [SECTION .text]
    11 00000000                                 	GLOBAL	_inthandler2c
    12 00000000                                 _inthandler2c:
    13 00000000 55                              	PUSH	EBP
    14 00000001 89 E5                           	MOV	EBP,ESP
    15 00000003 6A 64                           	PUSH	100
    16 00000005 68 000000A0                     	PUSH	160
    17 0000000A E8 [00000000]                   	CALL	_io_out8
    18 0000000F 6A 62                           	PUSH	98
    19 00000011 6A 20                           	PUSH	32
    20 00000013 E8 [00000000]                   	CALL	_io_out8
    21 00000018 83 C4 10                        	ADD	ESP,16
    22 0000001B C7 45 08 00000060               	MOV	DWORD [8+EBP],96
    23 00000022 C9                              	LEAVE
    24 00000023 E9 [00000000]                   	JMP	_io_in8
    25 00000028                                 	GLOBAL	_enable_mouse
    26 00000028                                 _enable_mouse:
    27 00000028 55                              	PUSH	EBP
    28 00000029 89 E5                           	MOV	EBP,ESP
    29 0000002B 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
    30 0000002E A3 [00000000]                   	MOV	DWORD [_mousefifo],EAX
    31 00000033 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
    32 00000036 A3 [00000004]                   	MOV	DWORD [_mouse_offset],EAX
    33 0000003B E8 [00000000]                   	CALL	_wait_KBC_sendready
    34 00000040 68 000000D4                     	PUSH	212
    35 00000045 6A 64                           	PUSH	100
    36 00000047 E8 [00000000]                   	CALL	_io_out8
    37 0000004C E8 [00000000]                   	CALL	_wait_KBC_sendready
    38 00000051 58                              	POP	EAX
    39 00000052 5A                              	POP	EDX
    40 00000053 C7 45 0C 000000F4               	MOV	DWORD [12+EBP],244
    41 0000005A C7 45 08 00000060               	MOV	DWORD [8+EBP],96
    42 00000061 C9                              	LEAVE
    43 00000062 E9 [00000000]                   	JMP	_io_out8
    44 00000067                                 	GLOBAL	_mouse_decode
    45 00000067                                 _mouse_decode:
    46 00000067 55                              	PUSH	EBP
    47 00000068 89 E5                           	MOV	EBP,ESP
    48 0000006A 56                              	PUSH	ESI
    49 0000006B 53                              	PUSH	EBX
    50 0000006C 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
    51 0000006F 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
    52 00000072 89 CE                           	MOV	ESI,ECX
    53 00000074 8A 42 03                        	MOV	AL,BYTE [3+EDX]
    54 00000077 84 C0                           	TEST	AL,AL
    55 00000079 75 11                           	JNE	L4
    56 0000007B 80 F9 FA                        	CMP	CL,-6
    57 0000007E 74 06                           	JE	L13
    58 00000080                                 L12:
    59 00000080 31 C0                           	XOR	EAX,EAX
    60 00000082                                 L3:
    61 00000082 5B                              	POP	EBX
    62 00000083 5E                              	POP	ESI
    63 00000084 5D                              	POP	EBP
    64 00000085 C3                              	RET
    65 00000086                                 L13:
    66 00000086 C6 42 03 01                     	MOV	BYTE [3+EDX],1
    67 0000008A EB F4                           	JMP	L12
    68 0000008C                                 L4:
    69 0000008C 3C 01                           	CMP	AL,1
    70 0000008E 74 61                           	JE	L14
    71 00000090 3C 02                           	CMP	AL,2
    72 00000092 74 54                           	JE	L15
    73 00000094 3C 03                           	CMP	AL,3
    74 00000096 74 05                           	JE	L16
    75 00000098 83 C8 FF                        	OR	EAX,-1
    76 0000009B EB E5                           	JMP	L3
    77 0000009D                                 L16:
    78 0000009D 8A 1A                           	MOV	BL,BYTE [EDX]
    79 0000009F 81 E6 000000FF                  	AND	ESI,255
    80 000000A5 89 D8                           	MOV	EAX,EBX
    81 000000A7 88 4A 02                        	MOV	BYTE [2+EDX],CL
    82 000000AA 83 E0 07                        	AND	EAX,7
    83 000000AD 89 72 08                        	MOV	DWORD [8+EDX],ESI
    84 000000B0 89 42 0C                        	MOV	DWORD [12+EDX],EAX
    85 000000B3 88 D8                           	MOV	AL,BL
    86 000000B5 0F B6 4A 01                     	MOVZX	ECX,BYTE [1+EDX]
    87 000000B9 83 E0 10                        	AND	EAX,16
    88 000000BC 89 4A 04                        	MOV	DWORD [4+EDX],ECX
    89 000000BF C6 42 03 01                     	MOV	BYTE [3+EDX],1
    90 000000C3 84 C0                           	TEST	AL,AL
    91 000000C5 74 09                           	JE	L10
    92 000000C7 81 C9 FFFFFF00                  	OR	ECX,-256
    93 000000CD 89 4A 04                        	MOV	DWORD [4+EDX],ECX
    94 000000D0                                 L10:
    95 000000D0 83 E3 20                        	AND	EBX,32
    96 000000D3 84 DB                           	TEST	BL,BL
    97 000000D5 74 07                           	JE	L11
    98 000000D7 81 4A 08 FFFFFF00               	OR	DWORD [8+EDX],-256
    99 000000DE                                 L11:
   100 000000DE F7 5A 08                        	NEG	DWORD [8+EDX]
   101 000000E1 B8 00000001                     	MOV	EAX,1
   102 000000E6 EB 9A                           	JMP	L3
   103 000000E8                                 L15:
   104 000000E8 88 4A 01                        	MOV	BYTE [1+EDX],CL
   105 000000EB C6 42 03 03                     	MOV	BYTE [3+EDX],3
   106 000000EF EB 8F                           	JMP	L12
   107 000000F1                                 L14:
   108 000000F1 83 E6 C8                        	AND	ESI,-56
   109 000000F4 89 F0                           	MOV	EAX,ESI
   110 000000F6 3C 08                           	CMP	AL,8
   111 000000F8 75 86                           	JNE	L12
   112 000000FA 88 0A                           	MOV	BYTE [EDX],CL
   113 000000FC C6 42 03 02                     	MOV	BYTE [3+EDX],2
   114 00000100 E9 FFFFFF7B                     	JMP	L12
   115 00000105                                 	GLOBAL	_mousefifo
   116                                          [SECTION .data]
   117 00000000                                 	ALIGNB	4
   118 00000000                                 _mousefifo:
   119 00000000 00 00 00 00                     	RESB	4
   120 00000004                                 	GLOBAL	_mouse_offset
   121                                          [SECTION .data]
   122 00000004                                 	ALIGNB	4
   123 00000004                                 _mouse_offset:
   124 00000004 00 00 00 00                     	RESB	4
