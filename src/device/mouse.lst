     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_io_out8
     7 00000000                                 	EXTERN	_io_in8
     8 00000000                                 	EXTERN	_bootInfo
     9 00000000                                 	EXTERN	_putStr
    10 00000000                                 	EXTERN	_wait_KBC_sendready
    11 00000000                                 [FILE "mouse.c"]
    12                                          [SECTION .data]
    13 00000000                                 LC0:
    14 00000000 6D 6F 75 73 65 00               	DB	"mouse",0x00
    15                                          [SECTION .text]
    16 00000000                                 	GLOBAL	_inthandler2c
    17 00000000                                 _inthandler2c:
    18 00000000 55                              	PUSH	EBP
    19 00000001 89 E5                           	MOV	EBP,ESP
    20 00000003 6A 64                           	PUSH	100
    21 00000005 68 000000A0                     	PUSH	160
    22 0000000A E8 [00000000]                   	CALL	_io_out8
    23 0000000F 6A 62                           	PUSH	98
    24 00000011 6A 20                           	PUSH	32
    25 00000013 E8 [00000000]                   	CALL	_io_out8
    26 00000018 6A 60                           	PUSH	96
    27 0000001A E8 [00000000]                   	CALL	_io_in8
    28 0000001F 8B 15 [00000000]                	MOV	EDX,DWORD [_bootInfo]
    29 00000025 68 [00000000]                   	PUSH	LC0
    30 0000002A 6A 00                           	PUSH	0
    31 0000002C 6A 50                           	PUSH	80
    32 0000002E 6A 00                           	PUSH	0
    33 00000030 0F BF 42 04                     	MOVSX	EAX,WORD [4+EDX]
    34 00000034 50                              	PUSH	EAX
    35 00000035 FF 72 08                        	PUSH	DWORD [8+EDX]
    36 00000038 E8 [00000000]                   	CALL	_putStr
    37 0000003D C9                              	LEAVE
    38 0000003E C3                              	RET
    39                                          [SECTION .data]
    40 00000006                                 LC1:
    41 00000006 73 74 31 00                     	DB	"st1",0x00
    42 0000000A                                 LC2:
    43 0000000A 73 74 32 00                     	DB	"st2",0x00
    44                                          [SECTION .text]
    45 0000003F                                 	GLOBAL	_enable_mouse
    46 0000003F                                 _enable_mouse:
    47 0000003F 55                              	PUSH	EBP
    48 00000040 89 E5                           	MOV	EBP,ESP
    49 00000042 E8 [00000000]                   	CALL	_wait_KBC_sendready
    50 00000047 8B 15 [00000000]                	MOV	EDX,DWORD [_bootInfo]
    51 0000004D 68 [00000006]                   	PUSH	LC1
    52 00000052 6A 00                           	PUSH	0
    53 00000054 6A 00                           	PUSH	0
    54 00000056 6A 28                           	PUSH	40
    55 00000058 0F BF 42 04                     	MOVSX	EAX,WORD [4+EDX]
    56 0000005C 50                              	PUSH	EAX
    57 0000005D FF 72 08                        	PUSH	DWORD [8+EDX]
    58 00000060 E8 [00000000]                   	CALL	_putStr
    59 00000065 68 000000D4                     	PUSH	212
    60 0000006A 6A 64                           	PUSH	100
    61 0000006C E8 [00000000]                   	CALL	_io_out8
    62 00000071 83 C4 20                        	ADD	ESP,32
    63 00000074 E8 [00000000]                   	CALL	_wait_KBC_sendready
    64 00000079 8B 15 [00000000]                	MOV	EDX,DWORD [_bootInfo]
    65 0000007F 68 [0000000A]                   	PUSH	LC2
    66 00000084 6A 00                           	PUSH	0
    67 00000086 6A 14                           	PUSH	20
    68 00000088 6A 28                           	PUSH	40
    69 0000008A 0F BF 42 04                     	MOVSX	EAX,WORD [4+EDX]
    70 0000008E 50                              	PUSH	EAX
    71 0000008F FF 72 08                        	PUSH	DWORD [8+EDX]
    72 00000092 E8 [00000000]                   	CALL	_putStr
    73 00000097 68 000000F4                     	PUSH	244
    74 0000009C 6A 60                           	PUSH	96
    75 0000009E E8 [00000000]                   	CALL	_io_out8
    76 000000A3 C9                              	LEAVE
    77 000000A4 C3                              	RET
