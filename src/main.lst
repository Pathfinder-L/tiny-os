     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_mem
     7 00000000                                 	EXTERN	_bootInfo
     8 00000000                                 	EXTERN	_memmanager
     9 00000000                                 	EXTERN	_shtctl_init
    10 00000000                                 	EXTERN	_sheet_alloc
    11 00000000                                 	EXTERN	_alloc4k
    12 00000000                                 	EXTERN	_sheet_setbuf
    13 00000000                                 	EXTERN	_sheet_slide
    14 00000000                                 	EXTERN	_sheet_updown
    15 00000000                                 	EXTERN	_init_gdtidt
    16 00000000                                 	EXTERN	_init_pic
    17 00000000                                 	EXTERN	_io_sti
    18 00000000                                 	EXTERN	_init_pit
    19 00000000                                 	EXTERN	_fifo32_init
    20 00000000                                 	EXTERN	_init_keyboard
    21 00000000                                 	EXTERN	_init_mouse_cursor
    22 00000000                                 	EXTERN	_enable_mouse
    23 00000000                                 	EXTERN	_io_out8
    24 00000000                                 	EXTERN	_init_palette
    25 00000000                                 	EXTERN	_timer_alloc
    26 00000000                                 	EXTERN	_timer_init
    27 00000000                                 	EXTERN	_timer_settime
    28 00000000                                 	EXTERN	_putStr
    29 00000000                                 	EXTERN	_fifo32_status
    30 00000000                                 	EXTERN	_fifo32_get
    31 00000000                                 	EXTERN	_boxfill
    32 00000000                                 	EXTERN	_sprintf
    33 00000000                                 [FILE "main.c"]
    34                                          [SECTION .data]
    35 00000000                                 LC1:
    36 00000000 35 73 65 63 00                  	DB	"5sec",0x00
    37 00000005                                 LC0:
    38 00000005 65 3A 25 64 00                  	DB	"e:%d",0x00
    39                                          [SECTION .text]
    40 00000000                                 	GLOBAL	_HariMain
    41 00000000                                 _HariMain:
    42 00000000 55                              	PUSH	EBP
    43 00000001 89 E5                           	MOV	EBP,ESP
    44 00000003 56                              	PUSH	ESI
    45 00000004 53                              	PUSH	EBX
    46 00000005 81 EC 00000330                  	SUB	ESP,816
    47 0000000B E8 [00000000]                   	CALL	_init_mem
    48 00000010 8B 15 [00000000]                	MOV	EDX,DWORD [_bootInfo]
    49 00000016 0F BF 42 06                     	MOVSX	EAX,WORD [6+EDX]
    50 0000001A 50                              	PUSH	EAX
    51 0000001B 0F BF 42 04                     	MOVSX	EAX,WORD [4+EDX]
    52 0000001F 50                              	PUSH	EAX
    53 00000020 FF 72 08                        	PUSH	DWORD [8+EDX]
    54 00000023 FF 35 [00000000]                	PUSH	DWORD [_memmanager]
    55 00000029 E8 [00000000]                   	CALL	_shtctl_init
    56 0000002E 89 C3                           	MOV	EBX,EAX
    57 00000030 50                              	PUSH	EAX
    58 00000031 E8 [00000000]                   	CALL	_sheet_alloc
    59 00000036 53                              	PUSH	EBX
    60 00000037 89 C6                           	MOV	ESI,EAX
    61 00000039 8D 5D D8                        	LEA	EBX,DWORD [-40+EBP]
    62 0000003C E8 [00000000]                   	CALL	_sheet_alloc
    63 00000041 8B 15 [00000000]                	MOV	EDX,DWORD [_bootInfo]
    64 00000047 0F BF 42 04                     	MOVSX	EAX,WORD [4+EDX]
    65 0000004B 0F BF 52 06                     	MOVSX	EDX,WORD [6+EDX]
    66 0000004F 0F AF C2                        	IMUL	EAX,EDX
    67 00000052 50                              	PUSH	EAX
    68 00000053 FF 35 [00000000]                	PUSH	DWORD [_memmanager]
    69 00000059 E8 [00000000]                   	CALL	_alloc4k
    70 0000005E 8B 0D [00000000]                	MOV	ECX,DWORD [_bootInfo]
    71 00000064 83 C4 20                        	ADD	ESP,32
    72 00000067 6A 63                           	PUSH	99
    73 00000069 0F BF 51 06                     	MOVSX	EDX,WORD [6+ECX]
    74 0000006D 52                              	PUSH	EDX
    75 0000006E 0F BF 51 04                     	MOVSX	EDX,WORD [4+ECX]
    76 00000072 52                              	PUSH	EDX
    77 00000073 50                              	PUSH	EAX
    78 00000074 56                              	PUSH	ESI
    79 00000075 E8 [00000000]                   	CALL	_sheet_setbuf
    80 0000007A 6A 00                           	PUSH	0
    81 0000007C 6A 00                           	PUSH	0
    82 0000007E 56                              	PUSH	ESI
    83 0000007F E8 [00000000]                   	CALL	_sheet_slide
    84 00000084 83 C4 20                        	ADD	ESP,32
    85 00000087 6A 01                           	PUSH	1
    86 00000089 56                              	PUSH	ESI
    87 0000008A E8 [00000000]                   	CALL	_sheet_updown
    88 0000008F E8 [00000000]                   	CALL	_init_gdtidt
    89 00000094 E8 [00000000]                   	CALL	_init_pic
    90 00000099 E8 [00000000]                   	CALL	_io_sti
    91 0000009E E8 [00000000]                   	CALL	_init_pit
    92 000000A3 8D 85 FFFFFDD8                  	LEA	EAX,DWORD [-552+EBP]
    93 000000A9 50                              	PUSH	EAX
    94 000000AA 68 00000080                     	PUSH	128
    95 000000AF 53                              	PUSH	EBX
    96 000000B0 E8 [00000000]                   	CALL	_fifo32_init
    97 000000B5 68 00000100                     	PUSH	256
    98 000000BA 53                              	PUSH	EBX
    99 000000BB E8 [00000000]                   	CALL	_init_keyboard
   100 000000C0 8D 85 FFFFFCC8                  	LEA	EAX,DWORD [-824+EBP]
   101 000000C6 50                              	PUSH	EAX
   102 000000C7 E8 [00000000]                   	CALL	_init_mouse_cursor
   103 000000CC 83 C4 20                        	ADD	ESP,32
   104 000000CF 68 00000200                     	PUSH	512
   105 000000D4 53                              	PUSH	EBX
   106 000000D5 E8 [00000000]                   	CALL	_enable_mouse
   107 000000DA 68 000000F8                     	PUSH	248
   108 000000DF 6A 21                           	PUSH	33
   109 000000E1 89 1D [00000020]                	MOV	DWORD [_dataStream],EBX
   110 000000E7 E8 [00000000]                   	CALL	_io_out8
   111 000000EC 68 000000EF                     	PUSH	239
   112 000000F1 68 000000A1                     	PUSH	161
   113 000000F6 E8 [00000000]                   	CALL	_io_out8
   114 000000FB E8 [00000000]                   	CALL	_init_palette
   115 00000100 E8 [00000000]                   	CALL	_timer_alloc
   116 00000105 6A 0A                           	PUSH	10
   117 00000107 53                              	PUSH	EBX
   118 00000108 89 C6                           	MOV	ESI,EAX
   119 0000010A 50                              	PUSH	EAX
   120 0000010B E8 [00000000]                   	CALL	_timer_init
   121 00000110 83 C4 24                        	ADD	ESP,36
   122 00000113 68 000003E8                     	PUSH	1000
   123 00000118 56                              	PUSH	ESI
   124 00000119 E8 [00000000]                   	CALL	_timer_settime
   125 0000011E E8 [00000000]                   	CALL	_timer_alloc
   126 00000123 6A 03                           	PUSH	3
   127 00000125 53                              	PUSH	EBX
   128 00000126 89 C6                           	MOV	ESI,EAX
   129 00000128 50                              	PUSH	EAX
   130 00000129 E8 [00000000]                   	CALL	_timer_init
   131 0000012E 68 0000012C                     	PUSH	300
   132 00000133 56                              	PUSH	ESI
   133 00000134 E8 [00000000]                   	CALL	_timer_settime
   134 00000139 E8 [00000000]                   	CALL	_timer_alloc
   135 0000013E 6A 01                           	PUSH	1
   136 00000140 53                              	PUSH	EBX
   137 00000141 89 C6                           	MOV	ESI,EAX
   138 00000143 50                              	PUSH	EAX
   139 00000144 E8 [00000000]                   	CALL	_timer_init
   140 00000149 83 C4 28                        	ADD	ESP,40
   141 0000014C 68 000001F4                     	PUSH	500
   142 00000151 56                              	PUSH	ESI
   143 00000152 E8 [00000000]                   	CALL	_timer_settime
   144 00000157 8B 15 [00000000]                	MOV	EDX,DWORD [_bootInfo]
   145 0000015D 8D 85 FFFFFDC8                  	LEA	EAX,DWORD [-568+EBP]
   146 00000163 50                              	PUSH	EAX
   147 00000164 6A 00                           	PUSH	0
   148 00000166 6A 00                           	PUSH	0
   149 00000168 6A 00                           	PUSH	0
   150 0000016A 0F BF 42 04                     	MOVSX	EAX,WORD [4+EDX]
   151 0000016E 50                              	PUSH	EAX
   152 0000016F FF 72 08                        	PUSH	DWORD [8+EDX]
   153 00000172 E8 [00000000]                   	CALL	_putStr
   154 00000177 83 C4 20                        	ADD	ESP,32
   155 0000017A                                 L2:
   156 0000017A FF 35 [00000020]                	PUSH	DWORD [_dataStream]
   157 00000180 E8 [00000000]                   	CALL	_fifo32_status
   158 00000185 5A                              	POP	EDX
   159 00000186 85 C0                           	TEST	EAX,EAX
   160 00000188 74 F0                           	JE	L2
   161 0000018A FF 35 [00000020]                	PUSH	DWORD [_dataStream]
   162 00000190 E8 [00000000]                   	CALL	_fifo32_get
   163 00000195 89 C3                           	MOV	EBX,EAX
   164 00000197 58                              	POP	EAX
   165 00000198 83 FB 64                        	CMP	EBX,100
   166 0000019B 7F 43                           	JG	L9
   167 0000019D 4B                              	DEC	EBX
   168 0000019E 75 DA                           	JNE	L2
   169 000001A0 6A 32                           	PUSH	50
   170 000001A2 8B 15 [00000000]                	MOV	EDX,DWORD [_bootInfo]
   171 000001A8 6A 64                           	PUSH	100
   172 000001AA 6A 28                           	PUSH	40
   173 000001AC 6A 32                           	PUSH	50
   174 000001AE 6A 0E                           	PUSH	14
   175 000001B0 0F BF 42 04                     	MOVSX	EAX,WORD [4+EDX]
   176 000001B4 50                              	PUSH	EAX
   177 000001B5 FF 72 08                        	PUSH	DWORD [8+EDX]
   178 000001B8 E8 [00000000]                   	CALL	_boxfill
   179 000001BD 8B 15 [00000000]                	MOV	EDX,DWORD [_bootInfo]
   180 000001C3 68 [00000000]                   	PUSH	LC1
   181 000001C8 6A 00                           	PUSH	0
   182 000001CA 6A 28                           	PUSH	40
   183 000001CC 6A 32                           	PUSH	50
   184 000001CE 0F BF 42 04                     	MOVSX	EAX,WORD [4+EDX]
   185 000001D2 50                              	PUSH	EAX
   186 000001D3 FF 72 08                        	PUSH	DWORD [8+EDX]
   187 000001D6 E8 [00000000]                   	CALL	_putStr
   188 000001DB 83 C4 34                        	ADD	ESP,52
   189 000001DE EB 9A                           	JMP	L2
   190 000001E0                                 L9:
   191 000001E0 6A 32                           	PUSH	50
   192 000001E2 8B 15 [00000000]                	MOV	EDX,DWORD [_bootInfo]
   193 000001E8 6A 64                           	PUSH	100
   194 000001EA 6A 1E                           	PUSH	30
   195 000001EC 6A 14                           	PUSH	20
   196 000001EE 6A 0E                           	PUSH	14
   197 000001F0 0F BF 42 04                     	MOVSX	EAX,WORD [4+EDX]
   198 000001F4 50                              	PUSH	EAX
   199 000001F5 FF 72 08                        	PUSH	DWORD [8+EDX]
   200 000001F8 E8 [00000000]                   	CALL	_boxfill
   201 000001FD 53                              	PUSH	EBX
   202 000001FE 68 [00000005]                   	PUSH	LC0
   203 00000203 8D 9D FFFFFDC8                  	LEA	EBX,DWORD [-568+EBP]
   204 00000209 53                              	PUSH	EBX
   205 0000020A E8 [00000000]                   	CALL	_sprintf
   206 0000020F 8B 15 [00000000]                	MOV	EDX,DWORD [_bootInfo]
   207 00000215 83 C4 28                        	ADD	ESP,40
   208 00000218 53                              	PUSH	EBX
   209 00000219 6A 00                           	PUSH	0
   210 0000021B 6A 1E                           	PUSH	30
   211 0000021D 6A 14                           	PUSH	20
   212 0000021F 0F BF 42 04                     	MOVSX	EAX,WORD [4+EDX]
   213 00000223 50                              	PUSH	EAX
   214 00000224 FF 72 08                        	PUSH	DWORD [8+EDX]
   215 00000227 E8 [00000000]                   	CALL	_putStr
   216 0000022C 83 C4 18                        	ADD	ESP,24
   217 0000022F E9 FFFFFF46                     	JMP	L2
   218 00000234                                 	GLOBAL	_mdec
   219                                          [SECTION .data]
   220 0000000A 00 00 00 00 00 00               	ALIGNB	16
   221 00000010                                 _mdec:
   222 00000010 00 00 00 00 00 00 00 00 00 00   	RESB	16
       0000001A 00 00 00 00 00 00 
   223 00000020                                 	GLOBAL	_dataStream
   224                                          [SECTION .data]
   225 00000020                                 	ALIGNB	4
   226 00000020                                 _dataStream:
   227 00000020 00 00 00 00                     	RESB	4
